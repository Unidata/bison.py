#!/bin/bash
#set -x

source ../common.sh

title "Test push parsing: Trivial Push Parser with api.push-pull verification"

B=YYParser

function clean {
    rm -f tmp experr expout stdout stderr input *.py *.pyc
}

function createexperr() {
cat >./experr <<EOF
teststate=YYPUSH_MORE expected=YYPUSH_MORE
teststate=YYPUSH_MORE expected=YYPUSH_MORE
teststate=YYPUSH_MORE expected=YYPUSH_MORE
teststate=YYPUSH_MORE expected=YYPUSH_MORE
teststate=YYACCEPT expected=YYACCEPT
syntax error, unexpected 'b', expecting 'a'
teststate=YYABORT expected=YYABORT
EOF
}

function testcase {
    tc=0
    c=0
    FAILED=""
    clean
    rm -f $B.py
    # Generate a pull parser
    bison -Dapi.push-pull=pull $SK -o $B.py $B.y
    # Look for markers in the generated parser
    c=`grep -c '^  def  *parse *(self).*$' YYParser.py`
    if test "x$c" != x1 ; then FAILED=1; fi
    c=`grep -c '^  def  *push_parse *(self, yylextoken, yylexval).*$' YYParser.py`
    if test "x$c" != x0 ; then FAILED=1; fi

    # Generate a push and pull parser
    bison -Dapi.push-pull=both $SK -o $B.py $B.y
    # Look for markers in the generated parser
    c=`grep -c '^  def  *push_parse *(self, yylextoken, yylexval).*$' YYParser.py`
    if test "x$c" != x1 ; then FAILED=1; fi
    c=`grep -c '^  def  *parse *(self).*$' YYParser.py`
    if test "x$c" != x1 ; then FAILED=1; fi

    # Generate a push only parser
    bison -Dapi.push-pull=push $SK -o $B.py $B.y
    # Look for markers in the generated parser
    c=`grep -c '^  def  *push_parse *(self, yylextoken, yylexval).*$' YYParser.py`
    if test "x$c" != x1 ; then FAILED=1; fi
    c=`grep -c '^  def  *parse *(self).*$' YYParser.py`
    if test "x$c" != x0 ; then FAILED=1; fi

    # Finally, run the parser in both mode
    createexperr
    bison -Dapi.push-pull=both $SK -o $B.py $B.y
    python YYParser.py >./stdout 2>./stderr
    out=`cat ./stdout`
    err=`cat ./stderr`
    if test "x$out" != x ; then FAILED=1; fi
    if ! diff ./experr ./stderr ; then FAILED=1; fi
    if test "$FAILED" == 1 ; then
      echo "***Fail"
    fi
}

function testall() {
testcase
}
run
